/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: test/simple.proto */

#ifndef PROTOBUF_C_test_2fsimple_2eproto__INCLUDED
#define PROTOBUF_C_test_2fsimple_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-v which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-v which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-v.
#endif


typedef struct _Foo__Simple Foo__Simple;


/* --- enums --- */


/* --- messages --- */

struct  _Foo__Simple
{
  ProtobufCMessage base;
  int32_t id;
  char *name;
  size_t n_other;
  int32_t *other;
};
#define FOO__SIMPLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&foo__simple__descriptor) \
    , 0, NULL, 0,NULL }


/* Foo__Simple methods */
void   foo__simple__init
                     (Foo__Simple         *message);
size_t foo__simple__get_packed_size
                     (const Foo__Simple   *message);
size_t foo__simple__pack
                     (const Foo__Simple   *message,
                      uint8_t             *out);
size_t foo__simple__pack_to_buffer
                     (const Foo__Simple   *message,
                      ProtobufCBuffer     *buffer);
Foo__Simple *
       foo__simple__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   foo__simple__free_unpacked
                     (Foo__Simple *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Foo__Simple_Closure)
                 (const Foo__Simple *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor foo__simple__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_test_2fsimple_2eproto__INCLUDED */
